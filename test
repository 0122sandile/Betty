#!/bin/bash

RED='\033[0;31m'
GREEN='\033[0;32m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'

tests_folder="tests"

errors=0

for dir in $tests_folder/*/
do
	dir=${dir%*/}
	echo -e "Found ${CYAN}${dir##*/}${NC} folder..."

	for file in ${dir}/*.{c,h}
	do

		if [ "${file}" == "${dir}/*.c" ] || [ "${file}" == "${dir}/*.h" ]
		then
			continue
		fi

		if [[ "${file}" == *.c ]]
		then
			current_test=${file%*.c}
		else
			current_test=${file%*.h}
		fi

		echo -e "\tTesting ${PURPLE}${current_test}${NC}..."

		src="${file}"
		expected="$current_test.expected"

		if [ ! -f $expected ]
		then
			echo -e "\t${RED}Missing expected output, ignored${NC}"
			echo
			continue
		fi

		output=$(./betty-style.pl --no-tree --terse -f $src)
		exp=$(cat $expected)

		# output_lines=$(echo -n $output | wc -l)
		# expected_lines=$(echo -n $exp | wc -l)
		#
		# echo -e "\tOUTPUT (${output_lines} lines):"
		# echo -e "\t$output"
		#
		# echo -e "\tEXPECTED ($expected_lines lines):"
		# echo -e "\t$exp"

		if [ "$output" != "$exp" ]
		then
			echo -e "\t${RED}Error. The output is not the one expected:${NC}"
			echo $output
			let errors++
		else
			echo -e "\t${GREEN}Test passed successfully!${NC}"
		fi
		echo
	done
done

if [ $errors -gt 0 ]
then
	echo -e "${RED}${errors} test(s) didn't passed...${NC}"
	exit 1
fi

echo -e "${GREEN}All tests passed successfully!${NC}"
exit 0
